<Window x:Class="M010.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="450" Width="300"
		WindowStartupLocation="CenterScreen"
		Topmost="True">
    <StackPanel>
		<!--Trigger-->
		<!--Styles mit Bedingungen-->
		<!--Müssen im Style definiert werden (Style.Triggers)-->
		<!--Haben Setter, welche ausgeführt werden, wenn der Trigger gültig ist-->
		
		<!--Drei Arten von Triggern: -->
		<!--Normaler Trigger + MultiTrigger-->
		<!--DataTrigger + MultiDataTrigger-->
		<!--EventTrigger-->
		
		<!--Aufgabenstellung: Text in einem TextBlock umfärben, wenn der User mit dem Cursor über dem TB steht-->
		<!--Früher mit Events, jetzt mit Triggern-->
		<TextBlock Text="Ein Text">
			<TextBlock.Style>
				<!--Trigger müssen immer im Style definiert werden-->
				<Style TargetType="TextBlock">
					<Style.Triggers>
						<!--Im Trigger wird die Bedingung definiert-->
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="Aqua"/>
							<Setter Property="FontSize" Value="40"/>
						</Trigger>
					</Style.Triggers>
				</Style>
			</TextBlock.Style>
		</TextBlock>
		
		<!--Aufgabenstellung: Button soll aktiviert werden, wenn eine CheckBox angehakt ist-->
		<!--Normaler Trigger kann nicht in andere Komponente hineinschauen -> DataTrigger-->
		<CheckBox Name="CB" Content="Button aktivieren"/>
		<Button Content="Hallo">
			<Button.Style>
				<!--Problem: Wenn der Button deaktiviert wird (IsEnabled=False), wird auch der Trigger deaktiviert-->
				<!--Lösung: IsEnabled=False in den Style ablegen-->
				<Style TargetType="Button">
					<Setter Property="IsEnabled" Value="False"/>
					
					<Style.Triggers>
						<DataTrigger Binding="{Binding ElementName=CB, Path=IsChecked}" Value="True">
							<Setter Property="IsEnabled" Value="True"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
		</Button>
		
		<!--Aufgabenstellung: Nur wenn drei CheckBoxen ausgewählt sind, soll ein Button sichtbar werden-->
		<CheckBox Content="CheckBox 1" Name="CB1"/>
		<CheckBox Content="CheckBox 2" Name="CB2"/>
		<CheckBox Content="CheckBox 3" Name="CB3"/>
		<Button Content="Hallo">
			<Button.Style>
				<Style TargetType="Button">
					<Setter Property="Visibility" Value="Hidden"/>
					<Style.Triggers>
						<MultiDataTrigger>
							<!--Hier muss Conditions als separates Element definiert werden-->
							<!--Hier werden Condition Objekte abgelegt-->
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding ElementName=CB1, Path=IsChecked}" Value="True"/>
								<Condition Binding="{Binding ElementName=CB2, Path=IsChecked}" Value="True"/>
								<Condition Binding="{Binding ElementName=CB3, Path=IsChecked}" Value="True"/>
							</MultiDataTrigger.Conditions>

							<Setter Property="Visibility" Value="Visible"/>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
		</Button>
	</StackPanel>
</Window>
